/*
*  Copyright (c) 2019. All right reserved
* Created on $today.date ( Date ISO $today.date("yyyy-MM-dd") - Time $today.time )
* Generated by $generator.name ( version $generator.version )
*/
package ${target.javaPackageFromFolder(${SRC})};


import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import ${ROOT_PKG}.repositories.${entity.name}Repository;
import ${ROOT_PKG}.entities.${entity.name};
import ${ROOT_PKG}.service.${entity.name}Service;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.domain.Specification;


import java.util.Collections;
import java.util.List;

/**
 * Service Implementation for managing {@link ${entity.name}}.
 * @author aek
 */
@Service
@Transactional
public class ${entity.name}ServiceImpl implements ${entity.name}Service {


    private final ${entity.name}Repository repository;

    public ${entity.name}ServiceImpl(${entity.name}Repository repo) {
         this.repository = repo;
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public ${entity.name} create(${entity.name} d) {
        try {
            return repository.save(d);

        } catch (Exception ex) {
            return null;
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ${entity.name} update(${entity.name} d) {
        try {
            return repository.saveAndFlush(d);

        } catch (Exception ex) {
            return null;
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ${entity.name} getOne(${entity.keyAttributes[0].formattedType(0)} id) {
        try {
            return repository.findById(id).orElse(null);

        } catch (Exception ex) {
            return null;
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<${entity.name}> getAll() {
        try {
            return repository.findAll();

        } catch (Exception ex) {
            return Collections.emptyList();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public long getTotal() {
        try {
            return repository.count();
        } catch (Exception ex) {
            return 0;
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void delete(${entity.keyAttributes[0].formattedType(0)} id) {
        repository.deleteById(id);
    }

    /**
     * {@inheritDoc}
     */
   	@Override
	public Page<${entity.name}> findAllPaginate(Pageable pageable) {

		return repository.findAll(pageable);
	}

    /**
     * {@inheritDoc}
     */
    @Override
	public Page<${entity.name}> findAllSpecification(Specification<${entity.name}> specs, Pageable pageable) {
		return repository.findAll(specs, pageable);
	}

}
